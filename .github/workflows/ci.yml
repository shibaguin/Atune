name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Install LibVLC on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libvlc-dev libvlc5 libvlccore9
      - name: Install LibVLC on macOS
        if: runner.os == 'macOS'
        run: brew update && brew install --cask vlc
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/Directory.Packages.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Restore dependencies
        run: |
          dotnet restore Atune/Atune.csproj
          dotnet restore Atune.Desktop/Atune.Desktop.csproj
          dotnet restore Atune.Browser/Atune.Browser.csproj
          dotnet restore Atune.Tests/Atune.Tests.csproj
      - name: Build
        run: |
          dotnet build Atune/Atune.csproj --no-restore --configuration Release
          dotnet build Atune.Desktop/Atune.Desktop.csproj --no-restore --configuration Release
          dotnet build Atune.Browser/Atune.Browser.csproj --no-restore --configuration Release
      - name: Test
        run: dotnet test Atune.Tests/Atune.Tests.csproj --filter "FullyQualifiedName!~Integration" --verbosity normal
      - name: Integration Test
        if: runner.os != 'Linux'
        run: dotnet test Atune.Tests/Atune.Tests.csproj --filter "FullyQualifiedName~Integration" --verbosity normal
      - name: Install dotnet-format
        run: dotnet tool install -g dotnet-format
      - name: Check code formatting
        run: dotnet format Atune.sln --verify-no-changes --no-restore
